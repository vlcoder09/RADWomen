public with sharing class WeekTwoHomework {
	

	public static void homeworkAssignmentMethod () {
		//Read through the set-up below and then complete the code following the prompts.  When you're done, make sure to compile (save) your work
		//Open Execute Anonymous in the Developer Console and execute your code by typing in: WeekTwoHomework.homeworkAssignmentMethod();
		//Read through the debug statements to make sure you're done your work correctly.
		
		//************************************************************************************************************

		// 1. Add two more whole numbers to this list using .add() 
		List < Integer > numberList = new List < Integer >{0,1,1,2,3,5,8,13,21,34};
		numberList.add(45);
		numberList.add(50);

		//Checking our work:
		system.debug('This number should be 12: ' +numberList.size());



		//************************************************************************************************************
		// 2. Create a new Lead and insert it in the database. (If you're stuck, look back at the WeekTwoClassExercises class for an example of creating a new SObject Record)
		//You can give it any values you like, but remember that last name and Company are required fields (both are simple text fields.)

		//Instantiate Lead as a new sObject called newLead.  I hate using single characters; I know it's easy...but it's hard for me to read.
        Lead newLead = new Lead();
        
        //Add First Name, Last Name, and Company Name.
        newLead.FirstName = 'Tawney';
        newLead.LastName = 'Leandro';
        newLead.Company = 'Meow2';
        
        //Insert the new Lead record.
        insert newLead;
        
        

		//Checking our work:
		system.debug('We should see One DML was executed: '+ Limits.getDMLRows());


		//************************************************************************************************************
		//3. For the loop that is commented out below, update the while condition by replacing the ?? so that the loop runs 5 times
		//delete the slashes so that the loop is no longer commented out and compile the class.

		//Can you add a debug statement to print out the counter value every time it runs through the loop?
		
		//Set integer variable counter to 0
		Integer counter = 0; 
		
        //What is the value of counter before entering the while loop?
        system.debug('Value of counter before entering while loop: ' + counter);
        
		while (counter < 5) {
            //What is the value of the counter at the beggining of the loop?
        	system.debug('Value of counter entering while loop: ' + counter);
			
            counter++;  //without this line to increment counter, we'd have an infinite loop!
            
            //What is the value of counter after incrementing counter?
            system.debug('Value of counter after increment: ' + counter);
		}

		System.debug('Done with the loop, it ran: ' + counter + ' times.');

	}
}
